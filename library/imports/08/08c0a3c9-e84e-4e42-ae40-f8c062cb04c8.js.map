{"version":3,"sources":["..\\..\\..\\assets/assets\\Player.js"],"names":["cc","Class","extends","Component","properties","canvas","default","type","Node","serializable","rb2d","RigidBody","isFlap","speed","isDie","sfscore","AudioClip","sfGameover","sfFlap","onLoad","director","getCollisionManager","enabled","getPhysicsManager","on","EventType","TOUCH_START","jump","audioEngine","play","start","update","dt","window","gamecontroller","isPaulse","linearVelocity","y","onCollisionEnter","other","self","node","name","onAddScore","setTimeout","onGameOver","bind"],"mappings":";;;;;;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,gBAAQ;AACJC,qBAAS,IADL,EACkB;AACtBC,kBAAMP,GAAGQ,IAFL,EAEW;AACfC,0BAAc,IAHV,CAGkB;AAHlB,SADA;;AAQRC,cAAKV,GAAGW,SARA;AASRC,gBAAO,KATC;AAURC,eAAO,GAVC;AAWRC,eAAM,KAXE;;AAaRC,iBAAS;AACLT,qBAAS,IADJ,EACiB;AACtBC,kBAAMP,GAAGgB,SAFJ,CAEe;AAFf,SAbD;AAiBRC,oBAAY;AACRX,qBAAS,IADD,EACc;AACtBC,kBAAMP,GAAGgB,SAFD,CAEY;AAFZ,SAjBJ;AAqBRE,gBAAQ;AACJZ,qBAAS,IADL,EACkB;AACtBC,kBAAMP,GAAGgB,SAFL,CAEgB;AAFhB;AArBA,KAHP;;AA8BL;;AAECG,UAhCI,oBAgCM;AACPnB,WAAGoB,QAAH,CAAYC,mBAAZ,GAAkCC,OAAlC,GAA4C,IAA5C;AACD;AACA;AACEtB,WAAGoB,QAAH,CAAYG,iBAAZ,GAAgCD,OAAhC,GAAwC,IAAxC;AACA,aAAKjB,MAAL,CAAYmB,EAAZ,CAAexB,GAAGQ,IAAH,CAAQiB,SAAR,CAAkBC,WAAjC,EAA6C,KAAKC,IAAlD,EAAwD,IAAxD;AACH,KAtCG;AAuCJA,QAvCI,kBAwCJ;AACI,YAAG,KAAKb,KAAL,IAAY,IAAf,EACA;AACI;AACH;AACFd,WAAG4B,WAAH,CAAeC,IAAf,CAAoB,KAAKX,MAAzB,EAAiC,KAAjC,EAAwC,EAAxC;AACA,aAAKN,MAAL,GAAY,IAAZ;AACF,KA/CG;AAiDLkB,SAjDK,mBAiDI,CAER,CAnDI;AAqDJC,UArDI,kBAqDIC,EArDJ,EAqDQ;;AAGT,YAAG,KAAKlB,KAAL,IAAemB,OAAOC,cAAP,CAAsBC,QAAtB,IAAgC,IAAlD,EACA;AACD,YAAItB,QAAO,KAAKH,IAAL,CAAU0B,cAArB;AACA,YAAG,KAAKxB,MAAL,IAAa,IAAhB,EACA;AACIC,kBAAMwB,CAAN,GAAQ,KAAKxB,KAAb;AACA,iBAAKD,MAAL,GAAY,KAAZ;AACH;AACD,aAAKF,IAAL,CAAU0B,cAAV,GAAyBvB,KAAzB;AACD,KAjEG;;;AAmEJyB,sBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACtC,YAAG,KAAK1B,KAAR,EACA;AACD,YAAGyB,MAAME,IAAN,CAAWC,IAAX,IAAiB,OAApB,EACA;AACC1C,eAAG4B,WAAH,CAAeC,IAAf,CAAoB,KAAKd,OAAzB,EAAkC,KAAlC,EAAyC,CAAzC;AACAkB,mBAAOC,cAAP,CAAsBS,UAAtB;AACA,SAJD,MAKA;AACI,iBAAK7B,KAAL,GAAW,IAAX;AACHd,eAAG4B,WAAH,CAAeC,IAAf,CAAoB,KAAKZ,UAAzB,EAAqC,KAArC,EAA4C,CAA5C;AACA2B,uBAAW,YAAY;AACnBX,uBAAOC,cAAP,CAAsBW,UAAtB;AACD,aAFQ,CAEPC,IAFO,CAEF,IAFE,CAAX,EAEgB,GAFhB;AAIA;AAEH;AApFI,CAAT","file":"Player.js","sourceRoot":"..\\..\\..\\assets","sourcesContent":["\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        canvas: {\r\n            default: null,        // The default value will be used only when the component attaching\r\n            type: cc.Node, // optional, default is typeof default\r\n            serializable: true,   // optional, default is true\r\n        },\r\n      \r\n     \r\n        rb2d:cc.RigidBody,\r\n        isFlap:false,\r\n        speed :300,       \r\n        isDie:false,\r\n\r\n        sfscore: {\r\n            default: null,        // The default value will be used only when the component attaching\r\n            type: cc.AudioClip, // optional, default is typeof default           \r\n        },\r\n        sfGameover: {\r\n            default: null,        // The default value will be used only when the component attaching\r\n            type: cc.AudioClip, // optional, default is typeof default           \r\n        },\r\n        sfFlap: {\r\n            default: null,        // The default value will be used only when the component attaching\r\n            type: cc.AudioClip, // optional, default is typeof default           \r\n        },\r\n    },\r\n   \r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n     onLoad () {\r\n        cc.director.getCollisionManager().enabled = true;\r\n       // cc.director.getCollisionManager().enabledDebugDraw = true;\r\n       // cc.director.getCollisionManager().enabledDrawBoundingBox = true;        \r\n         cc.director.getPhysicsManager().enabled=true;\r\n         this.canvas.on(cc.Node.EventType.TOUCH_START,this.jump, this);\r\n     },\r\n     jump()\r\n     {   \r\n         if(this.isDie==true)\r\n         {\r\n             return;\r\n         }\r\n        cc.audioEngine.play(this.sfFlap, false, .5);\r\n        this.isFlap=true;       \r\n     },\r\n     \r\n    start () {\r\n\r\n    },\r\n\r\n     update (dt) {\r\n     \r\n\r\n        if(this.isDie ||  window.gamecontroller.isPaulse==true)\r\n        return;\r\n       var speed= this.rb2d.linearVelocity;\r\n       if(this.isFlap==true)\r\n       {\r\n           speed.y=this.speed;\r\n           this.isFlap=false;\r\n       }\r\n       this.rb2d.linearVelocity=speed;\r\n     },\r\n\r\n     onCollisionEnter: function (other, self) {      \r\n        if(this.isDie)\r\n        return;\r\n       if(other.node.name=='Score')\r\n       {\r\n        cc.audioEngine.play(this.sfscore, false, 1);\r\n        window.gamecontroller.onAddScore();\r\n       }else\r\n       {\r\n           this.isDie=true;\r\n        cc.audioEngine.play(this.sfGameover, false, 1);\r\n        setTimeout(function () {\r\n            window.gamecontroller.onGameOver();\r\n          }.bind(this), 100);\r\n       \r\n       }\r\n       \r\n    },\r\n});\r\n"]}